# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        conf: [ "sha256", "murmur64" ]
        db: [ "mongo44", "postgres15" ]
        include:
          - db: postgres15
            conf: "sha256"
            expr: "postgres15"
          - db: postgres15
            conf: "murmur64"
            expr: "postgres15"            
          - db: mongo44
            conf: "sha256"
            expr: "mongo44"
          - db: mongo44
            conf: "murmur64"
            expr: "postgres15"
    steps:
      - name: Fake Test Run
        id: fake_test
        shell: bash
        run: |
          a fail

      - name: Set test result
        id: fake_test_result
        if: ${{ always() }} && ${{ steps.fake_test.outcome }} != 'success'
        run: echo "fail_test = ${{ steps.fake_test.outcome }}" > $GITHUB_OUTPUT

    outputs:
      api_test_result: ${{ steps.fake_test_result.outputs.fail_test }}

  xray:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Collect tests results
        id: test_results
        run: |
          echo "This is outcome for ${{ needs.test.outputs.api_test_result }}"

      - run: ${{ tojson(needs.test) }}
        shell: cat {0}

    # - name: Comment on PR
    #   if: ${{ always() }} && github.event.issue.pull_request
    #   uses: mshick/add-pr-comment@v2
    #   with:
    #     message: |
    #       **API tests result - ${{ matrix.db }}-${{ matrix.conf }}: Success 
    #       Branch used: ${{ github.ref }}
    #       Commit: ${{ github.event.after }} ${{ github.event.commits[0].message }}
    #       Triggered by: ${{ github.event_name }} (@${{ github.actor }})
    #       [Execution page](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
    #     repo-token: ${{ secrets.ORG_GH_TOKEN }}
    #     message-id: ${{matrix.number}}